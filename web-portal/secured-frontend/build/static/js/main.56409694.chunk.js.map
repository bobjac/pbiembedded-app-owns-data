{"version":3,"sources":["components/home-content.js","components/footer.js","components/hero.js","components/loading.js","components/main-nav.js","components/login-button.js","components/logout-button.js","components/authentication-button.js","components/auth-nav.js","components/nav-bar.js","components/report.js","components/workspace-users.js","components/admin.js","components/tenants.js","views/external-api.js","views/home.js","views/profile.js","auth/protected-route.js","components/create-report.js","components/logo.svg","components/workspaces.js","components/users.js","components/workspace-reports.js","components/datasets.js","app.js","auth/auth0-provider-with-history.js","index.js"],"names":["HomeContent","className","target","rel","href","Footer","Hero","src","alt","width","Loading","MainNav","to","exact","activeClassName","LoginButton","loginWithRedirect","useAuth0","onClick","LogoutButton","logout","returnTo","window","location","origin","AuthenticationButton","isAuthenticated","AuthNav","NavBar","Report","useState","reportConfig","setReportConfig","setMessage","reportId","useParams","getAccessTokenSilently","console","log","useEffect","a","token","fetch","process","headers","Authorization","response","json","responseData","message","callGetReportConfig","embedConfig","type","id","pbiIdentifier","embedUrl","accessToken","tokenType","models","TokenType","Embed","permissions","Permissions","All","viewMode","ViewMode","View","settings","panes","filters","expanded","visible","eventHandlers","Map","event","detail","cssClassName","getEmbeddedComponent","embeddedReport","report","WorkspaceUsers","workspaceId","setWorkspaceId","userId","setUserId","showNewWorkspaceUser","setShowNewWorkspaceUser","history","useHistory","handleSubmit","evt","preventDefault","pbiWorkspaceUserData","method","mode","body","JSON","stringify","createPbiWorkspaceUserResponse","createPbiWorkspaceUserResponseData","push","onSubmit","value","onChange","e","Admin","tenants","setTenants","users","setUsers","workspaceUsers","setWorkspaceUsers","dataSets","setDatasets","showTenants","setShowTenants","showUsers","setShowUsers","showWorkspaces","setShowWorkspaces","showWorkspaceUsers","setShowWorkspaceUsers","showWorkspaceReports","setShowWorkspaceReports","showDatasets","setShowDatasets","workspaces","setWorkspaces","serverUrl","callTenants","showNone","callWorkspaces","callWorkspaceUsers","callUsers","email","callDatasets","role","aria-label","map","tenant","tenantName","workspsace","workspaceName","user","workspaceUser","workspaceReport","dataSet","pbiId","pbiWorkspaceId","dataSetName","Tenants","showDiv","setShowDiv","setTenantName","setTenant","callShowDiv","tenantData","createTenantResponse","createTenantResponseData","pbiWorkspaceData","workspaceLocation","tenantId","createPbiWorkspaceResponse","createPbiWorkspaceResponseData","ExternalApi","reports","callApi","callSecureApi","callGetUserDatasetsFromApi","callGetUserDataSets","error","reportName","dataset","Home","Profile","name","picture","ProtectedRoute","component","args","withAuthenticationRequired","onRedirecting","CreateReport","powerbi","service","Service","factories","hpmFactory","wpmpFactory","routerFactory","setEmbedConfig","datasetId","callCloneReport","sourceWorkspaceId","destinationWorkspaceId","data","clonedReportResponse","clonedReportResponseData","pbiConfigResponse","pbiConfigResponseData","reportContainer","document","getElementById","embedCreateConfiguration","embedToken","embedDatasets","createReportEmbedURL","createReport","off","on","reportObjectId","callGetEmbedConfig","Workspaces","setWorkspaceName","setTenantId","setWorkspaceLocation","Users","idpUserId","setIdpUserId","setEmail","lastName","setLastName","firstName","setFirstName","showNewUser","setShowNewUser","userData","createUserResponse","createUserResponseData","WorkspaceReports","setReportId","showNewWorkspaceReport","setShowNewWorkspaceReport","createPbiWorkspaceReportResponse","createPbiWorkspaceReportResponseData","Datasets","tenandId","pbiWorkspace","setPbiWorkspace","setPbiId","setDataSetName","createdBy","setCreatedBy","createDatasetResponse","createDatasetResponseData","App","isLoading","path","Auth0ProviderWithHistory","children","domain","clientId","redirectUri","onRedirectCallback","appState","pathname","audience","ReactDOM","render"],"mappings":"iOA0FeA,EAxFK,kBAClB,sBAAKC,UAAU,aAAf,UACE,oBAAIA,UAAU,mBAAd,iCAEA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SACE,oBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,qCAHP,UAKE,mBAAGH,UAAU,qBALf,0CASF,2OAOF,qBAAKA,UAAU,WAEf,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SACE,oBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,oDAHP,UAKE,mBAAGH,UAAU,qBALf,0CASF,2QASJ,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SACE,oBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,2CAHP,UAKE,mBAAGH,UAAU,qBALf,yBASF,sOAOF,qBAAKA,UAAU,WAEf,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SACE,oBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,+BAHP,UAKE,mBAAGH,UAAU,qBALf,yBASF,8PCjEOI,EAZA,kBACb,yBAAQJ,UAAU,2BAAlB,UACE,qBAAKA,UAAU,SACf,2DAC6B,IAC3B,mBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAK,oBAAlD,0BCeSE,EAlBF,kBACX,sBAAKL,UAAU,mBAAf,UACE,qBAAKA,UAAU,gBAAgBM,IAJtB,gEAIiCC,IAAI,aAAaC,MAAM,QACjE,oBAAIR,UAAU,OAAd,kCACA,oBAAGA,UAAU,OAAb,oGAEgB,IACd,mBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,8CAHP,0BCDSM,EANC,kBACd,qBAAKT,UAAU,UAAf,SACE,qBAAKM,IAJP,mEAIwBC,IAAI,kB,OC0BfG,EA7BC,kBACd,sBAAKV,UAAU,qBAAf,UACE,cAAC,IAAD,CACEW,GAAG,IACHC,OAAK,EACLZ,UAAU,WACVa,gBAAgB,2BAJlB,kBAQA,cAAC,IAAD,CACEF,GAAG,WACHC,OAAK,EACLZ,UAAU,WACVa,gBAAgB,2BAJlB,qBAQA,cAAC,IAAD,CACEF,GAAG,gBACHC,OAAK,EACLZ,UAAU,WACVa,gBAAgB,2BAJlB,8BCNWC,EAZK,WAAO,IACjBC,EAAsBC,cAAtBD,kBACR,OACE,wBACEf,UAAU,4BACViB,QAAS,kBAAMF,KAFjB,qBCaWG,EAhBM,WAAO,IAClBC,EAAWH,cAAXG,OACR,OACE,wBACEnB,UAAU,2BACViB,QAAS,kBACPE,EAAO,CACLC,SAAUC,OAAOC,SAASC,UAJhC,sBCOWC,EANc,WAG3B,OAF4BR,cAApBS,gBAEiB,cAAC,EAAD,IAAmB,cAAC,EAAD,KCD/BC,EANC,kBACd,qBAAK1B,UAAU,qBAAf,SACE,cAAC,EAAD,OCcW2B,EAdA,WACb,OACE,qBAAK3B,UAAU,qBAAf,SACE,qBAAKA,UAAU,gDAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,sBACf,cAAC,EAAD,IACA,cAAC,EAAD,Y,8CCqEK4B,EA3EA,WAAO,IAAD,EACuBC,mBAAS,IADhC,mBACVC,EADU,KACIC,EADJ,OAEaF,mBAAS,IAFtB,mBAEDG,GAFC,WAITC,EAAaC,cAAbD,SACAE,EAA2BnB,cAA3BmB,uBA8BR,OA3BAC,QAAQC,IAAI,oCAAsCJ,GAEhDK,qBAAU,YACiB,uCAAG,gCAAAC,EAAA,+EAEJJ,IAFI,cAElBK,EAFkB,gBAGDC,MAAM,GAAD,OARlBC,wBAQkB,oBACFT,EADE,cAE1B,CACEU,QAAS,CACPC,cAAc,UAAD,OAAYJ,MAPP,cAGlBK,EAHkB,OAWxBT,QAAQC,IAAI,uDAAyDQ,GAX7C,UAYGA,EAASC,OAZZ,QAYlBC,EAZkB,OAcxBhB,EAAgBgB,GAChBX,QAAQC,IAAI,yCAfY,kDAiBxBL,EAAW,KAAMgB,SAjBO,0DAAH,qDAqBzBC,KACC,IAID,cAAC,eAAD,CACEC,YAAe,CACbC,KAAM,SACNC,GAAItB,EAAauB,cAEjBC,SAAUxB,EAAawB,SACvBC,YAAazB,EAAayB,YAC1BC,UAAWC,SAAOC,UAAUC,MAC5BC,YAAaH,SAAOI,YAAYC,IAChCC,SAAUN,SAAOO,SAASC,KAC1BC,SAAU,CACRC,MAAO,CACLC,QAAS,CACPC,UAAU,EACVC,SAAS,MAOjBC,cACE,IAAIC,IAAI,CACN,CAAC,SAAU,WAAapC,QAAQC,IAAI,mBACpC,CAAC,WAAY,WAAaD,QAAQC,IAAI,qBACtC,CAAC,QAAS,SAAUoC,GAAQrC,QAAQC,IAAIoC,EAAMC,YAIlDC,aAAiB,kBAEjBC,qBAAyB,SAACC,GACxBxD,OAAOyD,OAASD,MCSbE,G,MA9EQ,WAAO,IAAD,EACKlD,mBAAS,IADd,mBACTG,GADS,aAGaH,mBAAS,GAHtB,mBAGlBmD,EAHkB,KAGLC,EAHK,OAIGpD,mBAAS,GAJZ,mBAIlBqD,EAJkB,KAIVC,EAJU,OAM+BtD,oBAAS,GANxC,mBAMlBuD,EANkB,KAMIC,EANJ,KAOnBC,EAAUC,cAERpD,EAA2BnB,cAA3BmB,uBAQFqD,EAAY,uCAAG,WAAOC,GAAP,qBAAAlD,EAAA,6DACjBkD,EAAIC,iBADa,SAITC,EAAuB,CACvBT,OAAQA,EACRF,YAAaA,GANJ,SAQO7C,IARP,cAQPK,EARO,gBASgCC,MAAM,GAAD,OAfxCC,wBAewC,mBAAgC,CAC9EkD,OAAQ,OACRC,KAAM,OACNlD,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BH,IAE/BsD,KAAMC,KAAKC,UAAUL,KAhBZ,cASPM,EATO,OAkBb7D,QAAQC,IAAI,qCAAuC4D,GAlBtC,UAmBoCA,EAA+BnD,OAnBnE,QAmBPoD,EAnBO,OAoBb9D,QAAQC,IAAI,yCAA2C6D,GAEvDZ,EAAQa,KAAK,WAtBA,kDAwBbnE,EAAW,KAAMgB,SAxBJ,0DAAH,sDA4BlB,OACI,gCACI,qBAAKhD,UAAU,YAAf,SACI,mDAEJ,8BACA,wBACImD,KAAK,SACLnD,UAAU,kBACViB,QAzCY,WACpBoE,GAAwB,IAqCpB,kCAQCD,GACD,8BACI,uBAAMgB,SAAUZ,EAAhB,UACA,6CAEI,uBAAOrC,KAAK,OAAOkD,MAAOnB,EAAQoB,SAAU,SAAAC,GAAC,OAAIpB,EAAUoB,EAAEtG,OAAOoG,aAExE,kDAEI,uBAAOlD,KAAK,OAAOkD,MAAOrB,EAAasB,SAAU,SAAAC,GAAC,OAAItB,EAAesB,EAAEtG,OAAOoG,aAE9E,uBAAOlD,KAAK,SAASkD,MAAM,qBCqPhCG,EA1TD,WAAO,IAAD,EACc3E,mBAAS,IADvB,mBACTmB,EADS,KACAhB,EADA,OAEcH,mBAAS,IAFvB,mBAET4E,EAFS,KAEAC,EAFA,OAGU7E,mBAAS,IAHnB,mBAGT8E,EAHS,KAGFC,EAHE,OAI4B/E,mBAAS,IAJrC,mBAITgF,EAJS,KAIOC,EAJP,OAKgBjF,mBAAS,IALzB,mBAKTkF,EALS,KAKCC,EALD,OAOsBnF,oBAAS,GAP/B,mBAOToF,EAPS,KAOIC,EAPJ,OAQkBrF,oBAAS,GAR3B,mBAQTsF,EARS,KAQEC,EARF,OAS4BvF,oBAAS,GATrC,mBASTwF,EATS,KASOC,EATP,OAUoCzF,oBAAS,GAV7C,mBAUT0F,EAVS,KAUWC,EAVX,OAWwC3F,oBAAS,GAXjD,mBAWT4F,EAXS,KAWaC,EAXb,OAYwB7F,oBAAS,GAZjC,mBAYT8F,EAZS,KAYKC,EAZL,OAaoB/F,mBAAS,IAb7B,mBAaTgG,GAbS,KAaGC,GAbH,KAcVxC,GAAUC,cACRpD,GAA2BnB,cAA3BmB,uBACF4F,GAAYrF,wBAEVsF,GAAW,uCAAG,gCAAAzF,EAAA,6DAClBH,QAAQC,IAAI,sBADM,kBAGMF,KAHN,cAGRK,EAHQ,gBAISC,MAAM,GAAD,OACrBsF,GADqB,YAExB,CACEpF,QAAS,CACPC,cAAc,UAAD,OAAYJ,MARnB,cAIRK,EAJQ,OAYhBT,QAAQC,IAAI,uCAZI,UAaWQ,EAASC,OAbpB,QAaVC,EAbU,OAchBX,QAAQC,IAAI,2CAEZqE,EAAW3D,GACXkF,KACAf,GAAe,GAlBC,kDAoBhBlF,EAAW,KAAMgB,SApBD,0DAAH,qDAgDXiF,GAAW,WACff,GAAe,GACfE,GAAa,GACbE,GAAkB,GAClBE,GAAsB,GACtBE,GAAwB,GACxBE,GAAgB,IAGZM,GAAc,uCAAG,gCAAA3F,EAAA,+EAEGJ,KAFH,cAEXK,EAFW,gBAGMC,MAAM,GAAD,OACrBsF,GADqB,eAExB,CACEpF,QAAS,CACPC,cAAc,UAAD,OAAYJ,MAPhB,cAGXK,EAHW,OAWnBT,QAAQC,IAAI,oCAXO,UAYQQ,EAASC,OAZjB,QAYbC,EAZa,OAanBX,QAAQC,IAAI,4CAA8CU,GAC1D+E,GAAc/E,GACdkF,KACAX,GAAkB,GAhBC,kDAkBnBtF,EAAW,KAAMgB,SAlBE,0DAAH,qDAsBdmF,GAAkB,uCAAG,gCAAA5F,EAAA,+EAEHJ,KAFG,cAEjBK,EAFiB,gBAGAC,MAAM,GAAD,OACrBsF,GADqB,mBAExB,CACEpF,QAAS,CACPC,cAAc,UAAD,OAAYJ,MAPV,cAGjBK,EAHiB,OAWvBT,QAAQC,IAAI,wCAXW,UAYIQ,EAASC,OAZb,QAYjBC,EAZiB,OAavBX,QAAQC,IAAI,gDAAkDU,GAC9D+D,EAAkB/D,GAClBkF,KACAT,GAAsB,GAhBC,kDAkBvBxF,EAAW,KAAMgB,SAlBM,0DAAH,qDAsBlBoF,GAAS,uCAAG,gCAAA7F,EAAA,+EAEQJ,KAFR,cAENK,EAFM,gBAIWC,MAAM,GAAD,OACrBsF,GADqB,UAExB,CACEpF,QAAS,CACPC,cAAc,UAAD,OAAYJ,MARrB,cAINK,EAJM,OAWZT,QAAQC,IAAI,+BAXA,UAYeQ,EAASC,OAZxB,QAYNC,EAZM,OAaZX,QAAQC,IAAI,uCAAyCU,GACrDX,QAAQC,IAAI,wBAA0BU,EAAasF,OACnDzB,EAAS7D,GACTkF,KACAb,GAAa,GAjBD,kDAmBZpF,EAAW,KAAMgB,SAnBL,0DAAH,qDAuBTsF,GAAY,uCAAG,gCAAA/F,EAAA,+EAEKJ,KAFL,cAETK,EAFS,gBAIQC,MAAM,GAAD,OACrBsF,GADqB,aAExB,CACIpF,QAAS,CACPC,cAAc,UAAD,OAAYJ,MARpB,cAITK,EAJS,OAYfT,QAAQC,IAAI,kCAZG,UAaYQ,EAASC,OAbrB,QAaTC,EAbS,OAcfX,QAAQC,IAAI,0CAA4CU,GACxDiE,EAAYjE,GACZkF,KACAL,GAAgB,GAjBD,kDAmBf5F,EAAW,KAAMgB,SAnBF,0DAAH,qDAuBpB,OACI,sBAAKhD,UAAU,YAAf,UACE,8CACA,iOAKA,sBACEA,UAAU,iBACVuI,KAAK,QACLC,aAAW,iCAHb,UAKE,wBAAQrF,KAAK,SAASnD,UAAU,kBAAkBiB,QAAS+G,GAA3D,qBAGA,wBACE7E,KAAK,SACLnD,UAAU,kBACViB,QAASiH,GAHX,wBAOA,wBACE/E,KAAK,SACLnD,UAAU,kBACViB,QAASmH,GAHX,mBAOA,wBACEjF,KAAK,SACLnD,UAAU,kBACViB,QAASkH,GAHX,6BAOA,wBACEhF,KAAK,SACLnD,UAAU,kBACViB,QAASqH,GAHX,yBAQDtF,GACC,sBAAKhD,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,oBACA,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAMA,UAAU,gCAAhB,SAAiDgD,WAKxDiE,GACG,gCACE,0CACA,8BACI,wBAAQ9D,KAAK,SAASnD,UAAU,kBAAkBiB,QAtLpC,WAC1BqE,GAAQa,KAAK,cAqLD,0BAEJ,8BACA,6BACKM,EAAQgC,KAAI,SAAAC,GAAM,OACf,6BAAoB,eAAC,IAAD,CAAM/H,GAAE,mBAAc+H,EAAOtF,IAA7B,UAAoCsF,EAAOtF,GAA3C,MAAkDsF,EAAOC,eAApED,EAAOtF,cAM7BiE,GACC,gCACI,6CACA,8BACI,wBAAQlE,KAAK,SAASnD,UAAU,kBAAkBiB,QAjMjC,WAC7BqE,GAAQa,KAAK,iBAgMD,6BAEJ,8BACA,6BACK0B,GAAWY,KAAI,SAAAG,GAAU,OACtB,6BAAwB,eAAC,IAAD,CAAMjI,GAAE,sBAAiBiI,EAAWxF,IAApC,UAA2CwF,EAAWxF,GAAtD,MAA6DwF,EAAWC,kBAAvFD,EAAWxF,cAMjC+D,GACC,gCACI,wCACA,8BACI,wBAAQhE,KAAK,SAASnD,UAAU,kBAAkBiB,QA5MtC,WACtBqE,GAAQa,KAAK,YA2MH,wBAEJ,8BACA,6BACKQ,EAAM8B,KAAI,SAAAK,GAAI,OACX,6BAAkB,eAAC,IAAD,CAAMnI,GAAE,iBAAYmI,EAAK1F,IAAzB,UAAgC0F,EAAK1F,GAArC,MAA4C0F,EAAKT,UAA1DS,EAAK1F,cAM3BmE,GACC,gCACI,wCACA,8BACI,wBAAQpE,KAAK,SAASnD,UAAU,kBAAkBiB,QAvN7B,WAC/BqE,GAAQa,KAAK,qBAsNH,kCAEJ,8BACA,6BACKU,EAAe4B,KAAI,SAAAM,GAAa,OAC7B,6BAA2B,eAAC,IAAD,CAAMpI,GAAE,iBAAYoI,EAAc3F,IAAlC,UAAyC2F,EAAc3F,GAAvD,MAA8D2F,EAAc7D,OAA5E,IAAqF6D,EAAc/D,gBAArH+D,EAAc3F,cAMpCqE,GACC,gCACI,wCACA,8BACI,wBAAQtE,KAAK,SAASnD,UAAU,kBAAkBiB,QAlO3B,WACnCqE,GAAQa,KAAK,wBAiOD,qCAEJ,8BACA,6BACKQ,EAAM8B,KAAI,SAAAO,GAAe,OACtB,6BAA6B,eAAC,IAAD,CAAMrI,GAAE,6BAAwBqI,EAAgB5F,IAAhD,UAAuD4F,EAAgBhE,YAAvE,IAAqFgE,EAAgB/G,aAAzH+G,EAAgB5F,cAMtCuE,GACC,gCACI,2CACA,8BACI,wBAAQxE,KAAK,SAASnD,UAAU,kBAAkBiB,QA7OnC,WAC3BqE,GAAQa,KAAK,eA4OD,4BAEJ,8BACA,6BACKY,EAAS0B,KAAI,SAAAQ,GAAO,OACjB,6BAAqB,eAAC,IAAD,CAAMtI,GAAE,oBAAesI,EAAQC,MAAvB,YAAgCD,EAAQE,gBAAhD,UAAmEF,EAAQjE,YAA3E,MAA2FiE,EAAQG,gBAA/GH,EAAQ7F,kBC5N1BiG,EArFC,WAAO,IAAD,EACYxH,mBAAS,IADrB,mBACFG,GADE,aAEYH,oBAAS,GAFrB,mBAEXyH,EAFW,KAEFC,EAFE,OAGkB1H,mBAAS,IAH3B,mBAGX8G,EAHW,KAGCa,EAHD,OAIU3H,mBAAS,IAJnB,mBAIH4H,GAJG,WAKZnE,EAAUC,cACRpD,EAA2BnB,cAA3BmB,uBACF4F,EAAYrF,wBAEZgH,EAAW,uCAAG,sBAAAnH,EAAA,sDAChBgH,GAAYD,GADI,2CAAH,qDAIX9D,EAAY,uCAAG,WAAOC,GAAP,2BAAAlD,EAAA,6DACjBkD,EAAIC,iBADa,SAGTiE,EAAa,CACbhB,WAAYA,GAJH,SAMOxG,IANP,cAMPK,EANO,gBAOsBC,MAAM,GAAD,OAAIsF,EAAJ,YAAyB,CAC7DnC,OAAQ,OACRC,KAAM,OACNlD,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BH,IAE/BsD,KAAMC,KAAKC,UAAU2D,KAdZ,cAOPC,EAPO,iBAgB0BA,EAAqB9G,OAhB/C,eAgBP+G,EAhBO,OAiBbzH,QAAQC,IAAI,+BAAiCwH,GAC7CJ,EAAUI,GAGNC,EAAmB,CACnBC,kBAAmB,SACnBlB,cAAeF,EACfqB,SAAUH,EAAyBzG,IAxB1B,UA0B4BX,MAAM,GAAD,OAAIsF,EAAJ,eAA4B,CACtEnC,OAAQ,OACRC,KAAM,OACNlD,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BH,IAE/BsD,KAAMC,KAAKC,UAAU8D,KAjCZ,eA0BPG,EA1BO,OAmCb7H,QAAQC,IAAI,iCAAmC4H,GAnClC,UAoCgCA,EAA2BnH,OApC3D,QAoCPoH,EApCO,OAqCb9H,QAAQC,IAAI,qCAAuC6H,GAEnD5E,EAAQa,KAAK,WAvCA,kDAyCbnE,EAAW,KAAMgB,SAzCJ,0DAAH,sDA4ClB,OACI,gCACI,qBAAKhD,UAAU,YAAf,SACI,2CAEJ,8BACA,wBACImD,KAAK,SACLnD,UAAU,kBACViB,QAASyI,EAHb,oBAQCJ,GACD,8BACI,uBAAMlD,SAAUZ,EAAhB,UACA,iDAEI,uBAAOrC,KAAK,OAAOkD,MAAOsC,EAAYrC,SAAU,SAAAC,GAAC,OAAIiD,EAAcjD,EAAEtG,OAAOoG,aAE5E,uBAAOlD,KAAK,SAASkD,MAAM,oBCkHhC8D,EAlMK,WAAO,IAAD,EACMtI,mBAAS,IADf,mBACjBmB,EADiB,KACRhB,EADQ,OAEEH,mBAAS,IAFX,gCAGMA,mBAAS,KAHf,mBAGjBuI,EAHiB,aAIQvI,mBAAS,KAJjB,mBAIjBkF,EAJiB,KAIPC,EAJO,OAKgBnF,mBAAS,IALzB,mBAMlByD,GANkB,UAMRC,eACVwC,EAAYrF,wBAEVP,EAA2BnB,cAA3BmB,uBAMFkI,EAAO,uCAAG,8BAAA9H,EAAA,+EAEWE,MAAM,GAAD,OAAIsF,EAAJ,gBAFhB,cAENlF,EAFM,gBAIeA,EAASC,OAJxB,OAINC,EAJM,OAMZf,EAAWe,EAAaC,SANZ,kDAQZhB,EAAW,KAAMgB,SARL,0DAAH,qDAYPsH,EAAa,uCAAG,gCAAA/H,EAAA,+EAEEJ,IAFF,cAEZK,EAFY,gBAIKC,MAAM,GAAD,OACvBsF,EADuB,gBAE1B,CACEpF,QAAS,CACPC,cAAc,UAAD,OAAYJ,MARb,cAIZK,EAJY,gBAaSA,EAASC,OAblB,OAaZC,EAbY,OAclBf,EAAWe,EAAaC,SAdN,kDAiBlBhB,EAAW,KAAMgB,SAjBC,0DAAH,qDAgEbuH,EAA0B,uCAAG,gCAAAhI,EAAA,+EAEbJ,IAFa,cAE3BK,EAF2B,gBAGVC,MAAM,GAAD,OACvBsF,EADuB,qBAE1B,CACEpF,QAAS,CACPC,cAAc,UAAD,OAAYJ,MAPE,cAG3BK,EAH2B,gBAUJA,EAASC,OAVL,OAUzBC,EAVyB,OAW/BX,QAAQC,IAAI,wEAA0EU,GAEvFiE,EAAYjE,GAboB,kDAe/Bf,EAAW,KAAMgB,SAfc,0DAAH,qDAmB1BwH,EAAmB,uCAAG,sBAAAjI,EAAA,sDAC1B,IASEyE,EANqB,CACnB,CACE5D,GAAI,uCACJgG,YAAa,aAIjB,MAAOqB,GACPzI,EAAWyI,EAAMzH,SAZO,2CAAH,qDAgBzB,OACE,sBAAKhD,UAAU,YAAf,UACE,8CACA,iOAKA,sBACEA,UAAU,iBACVuI,KAAK,QACLC,aAAW,iCAHb,UAKE,wBAAQrF,KAAK,SAASnD,UAAU,kBAAkBiB,QAASoJ,EAA3D,gCAGA,wBACElH,KAAK,SACLnD,UAAU,kBACViB,QAASqJ,EAHX,mCAOA,wBACAnH,KAAK,SACLnD,UAAU,kBACViB,QAASuJ,EAHT,0BAOA,wBACArH,KAAK,SACLnD,UAAU,kBACViB,QAASsJ,EAHT,+BAOA,wBACApH,KAAK,SACLnD,UAAU,kBACViB,QA3JY,WAChBqE,EAAQa,KAAK,WAuJT,sBAQDnD,GACC,sBAAKhD,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,oBACA,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAMA,UAAU,gCAAhB,SAAiDgD,WAKzD,+BACCoH,EAAQ3B,KAAI,SAAA3D,GAAM,OACjB,6BAAoB,cAAC,IAAD,CAAMnE,GAAE,mBAAcmE,EAAO1B,IAA7B,SAAoC0B,EAAO4F,cAAtD5F,EAAO1B,OAEjB2D,EAAS0B,KAAI,SAAAkC,GAAO,OACnB,6BAAqB,cAAC,IAAD,CAAMhK,GAAE,oBAAegK,EAAQvH,GAAvB,yCAAR,SAA2EuH,EAAQvB,eAA/FuB,EAAQvH,cClLVwH,EARF,kBACX,eAAC,WAAD,WACE,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,QCwBWC,EA5BC,WAAO,IACb/B,EAAS9H,cAAT8H,KACAgC,EAAyBhC,EAAzBgC,KAAMC,EAAmBjC,EAAnBiC,QAAS1C,EAAUS,EAAVT,MAEvB,OACE,gCACE,sBAAKrI,UAAU,wCAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBACEM,IAAKyK,EACLxK,IAAI,UACJP,UAAU,4DAGd,sBAAKA,UAAU,kCAAf,UACE,6BAAK8K,IACL,mBAAG9K,UAAU,kBAAb,SAAgCqI,UAGpC,qBAAKrI,UAAU,MAAf,SACE,qBAAKA,UAAU,gCAAf,SACG+F,KAAKC,UAAU8C,EAAM,KAAM,W,gBCTvBkC,EATQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAcC,EAAjB,oCACrB,cAAC,IAAD,aACED,UAAWE,YAA2BF,EAAW,CAC/CG,cAAe,kBAAM,cAAC,EAAD,QAEnBF,KCsGOG,GClHA,IDQM,WACjB,IAAMC,EAAU,IAAIC,UAAQC,QAAQC,YAAUC,WAAYD,YAAUE,YAAaF,YAAUG,eACnFzJ,EAA2BnB,cAA3BmB,uBAFe,EAGeN,mBAAS,IAHxB,mBAGHgK,GAHG,aAIiBhK,mBAAS,IAJ1B,gCAKOA,mBAAS,KALhB,mBAKPG,GALO,WAMjBsD,EAAUC,cANO,EAQYrD,cAA3B4J,EARe,EAQfA,UACF/D,GATiB,EAQJ/C,YACDtC,yBAEZqJ,EAAe,uCAAG,WAAM9J,EAAUyI,EAAYsB,EAAmBC,GAA/C,qBAAA1J,EAAA,6DAChB2J,EAAO,CACPF,kBAAmBA,EACnBC,uBAAwBA,EACxBhK,SAAUA,EACVyI,WAAYA,GALI,kBAQEvI,IARF,cAQZK,EARY,gBASiBC,MAAM,GAAD,OAAIsF,EAAJ,oBAAyB9F,EAAzB,UAA2C,CAC/E2D,OAAQ,OACRC,KAAM,OACNlD,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BH,IAE/BsD,KAAMC,KAAKC,UAAUkG,KAhBP,cASZC,EATY,iBAkBqBA,EAAqBrJ,OAlB1C,QAkBZsJ,EAlBY,OAoBlB9G,EAAQa,KAAR,mBAAyBiG,EAAyB/I,gBApBhC,kDAsBlBrB,EAAW,KAAMgB,SAtBC,0DAAH,4DAqFrB,OA3DAV,qBAAU,WACNF,QAAQC,IAAI,uBAEY,uCAAG,oCAAAE,EAAA,sEACWE,MAAM,GAAD,OAAIsF,EAAJ,qBAA0B+D,EAA1B,YADhB,cACfO,EADe,gBAEeA,EAAkBvJ,OAFjC,OAEfwJ,EAFe,OAGrBT,EAAeS,GAEbC,EAAkBC,SAASC,eAAe,mBAE1CC,EAA2B,CAC3BvJ,KAAM,SACNK,UAAW,EACXD,YAAa+I,EAAsBK,WAAWnK,MAC9Cc,SAAUgJ,EAAsBM,cAAc,GAAGC,qBACjDf,UAAWQ,EAAsBM,cAAc,GAAGxJ,GAClDQ,YAAaH,SAAOI,YAAYC,IAChCI,SAAU,CACVC,MAAO,CACHC,QAAS,CACTC,UAAU,EACVC,SAAS,MAMM,MAAnBiI,IACIzH,EAASwG,EAAQwB,aAAaP,EAAiBG,IAE5CK,IAAI,UAGXjI,EAAOkI,GAAG,UAAU,WACpB5K,QAAQC,IAAI,6BAIZyC,EAAOiI,IAAI,YAGXjI,EAAOkI,GAAG,YAAY,WAClB5K,QAAQC,IAAI,+BAGhByC,EAAOiI,IAAI,SACXjI,EAAOkI,GAAG,SAAS,SAAUvI,GACzB,IAAIxC,EAAWwC,EAAMC,OAAOuI,eACxBvC,EAAajG,EAAMC,OAAOgG,WAG9BqB,EAAgB9J,EAAUyI,EAFF,uCACK,4CAIjCtI,QAAQC,IAAI,kCAnDO,4CAAH,oDAsDxB6K,KACD,IAEC,qBAAKlN,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKoD,GAAG,kBAAkBpD,UAAU,0BEVjCmN,EA3FI,WAAO,IAAD,EACStL,mBAAS,IADlB,mBACLG,GADK,aAESH,oBAAS,GAFlB,mBAEdyH,EAFc,KAELC,EAFK,OAGqB1H,mBAAS,IAH9B,mBAGdgH,EAHc,KAGCuE,EAHD,OAIWvL,mBAAS,GAJpB,mBAIdmI,EAJc,KAIJqD,EAJI,OAK6BxL,mBAAS,IALtC,mBAKdkI,EALc,KAKKuD,EALL,KAMfhI,EAAUC,cACRpD,EAA2BnB,cAA3BmB,uBAGFuH,EAAW,uCAAG,sBAAAnH,EAAA,sDAChBgH,GAAYD,GADI,2CAAH,qDAGX9D,EAAY,uCAAG,WAAOC,GAAP,qBAAAlD,EAAA,6DACjBkD,EAAIC,iBADa,SAkBToE,EAAmB,CACnBC,kBAAmBA,EACnBlB,cAAeA,EACfmB,SAAUA,GArBD,SAuBO7H,IAvBP,cAuBPK,EAvBO,gBAwB4BC,MAAM,GAAD,OA7BpCC,wBA6BoC,eAA4B,CACtEkD,OAAQ,OACRC,KAAM,OACNlD,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BH,IAE/BsD,KAAMC,KAAKC,UAAU8D,KA/BZ,cAwBPG,EAxBO,OAiCb7H,QAAQC,IAAI,iCAAmC4H,GAjClC,UAkCgCA,EAA2BnH,OAlC3D,QAkCPoH,EAlCO,OAmCb9H,QAAQC,IAAI,qCAAuC6H,GAEnD5E,EAAQa,KAAK,WArCA,kDAuCbnE,EAAW,KAAMgB,SAvCJ,0DAAH,sDA0ClB,OACI,gCACI,qBAAKhD,UAAU,YAAf,SACI,2CAEJ,8BACA,wBACImD,KAAK,SACLnD,UAAU,kBACViB,QAASyI,EAHb,6BAQCJ,GACD,8BACI,uBAAMlD,SAAUZ,EAAhB,UACA,oDAEI,uBAAOrC,KAAK,OAAOkD,MAAOwC,EAAevC,SAAU,SAAAC,GAAC,OAAI6G,EAAiB7G,EAAEtG,OAAOoG,aAEtF,wDAEI,uBAAOlD,KAAK,OAAOkD,MAAO0D,EAAmBzD,SAAU,SAAAC,GAAC,OAAI+G,EAAqB/G,EAAEtG,OAAOoG,aAE9F,+CAEI,uBAAOlD,KAAK,OAAOkD,MAAO2D,EAAU1D,SAAU,SAAAC,GAAC,OAAI8G,EAAY9G,EAAEtG,OAAOoG,aAExE,uBAAOlD,KAAK,SAASkD,MAAM,oBCMhCkH,EA1FD,WAAO,IAAD,EACc1L,mBAAS,IADvB,mBACAG,GADA,aAGkBH,mBAAS,IAH3B,mBAGT2L,EAHS,KAGEC,EAHF,OAIU5L,mBAAS,IAJnB,mBAITwG,EAJS,KAIFqF,EAJE,OAKgB7L,mBAAS,IALzB,mBAKT8L,EALS,KAKCC,EALD,OAMkB/L,mBAAS,IAN3B,mBAMTgM,EANS,KAMEC,EANF,KAQVxI,EAAUC,cARA,EASsB1D,oBAAS,GAT/B,mBASTkM,EATS,KASIC,EATJ,KAWR7L,EAA2BnB,cAA3BmB,uBAQFqD,EAAY,uCAAG,WAAOC,GAAP,qBAAAlD,EAAA,6DACjBkD,EAAIC,iBADa,SAITuI,EAAW,CACX/I,OAAQsI,EACRnF,MAAOA,EACPsF,SAAUA,EACVE,UAAWA,GARF,SAUO1L,IAVP,cAUPK,EAVO,gBAWoBC,MAAM,GAAD,OAjB5BC,wBAiB4B,UAAuB,CACzDkD,OAAQ,OACRC,KAAM,OACNlD,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BH,IAE/BsD,KAAMC,KAAKC,UAAUiI,KAlBZ,cAWPC,EAXO,OAoBb9L,QAAQC,IAAI,yBAA2B6L,GApB1B,UAqBwBA,EAAmBpL,OArB3C,QAqBPqL,EArBO,OAsBb/L,QAAQC,IAAI,6BAA+B8L,GAE3C7I,EAAQa,KAAK,WAxBA,kDA0BbnE,EAAW,KAAMgB,SA1BJ,0DAAH,sDA8BlB,OACI,gCACI,qBAAKhD,UAAU,YAAf,SACI,yCAEJ,8BACA,wBACImD,KAAK,SACLnD,UAAU,kBACViB,QA3CY,WACpB+M,GAAe,IAuCX,wBAQCD,GACD,8BACI,uBAAM3H,SAAUZ,EAAhB,UACA,iDAEI,uBAAOrC,KAAK,OAAOkD,MAAOmH,EAAWlH,SAAU,SAAAC,GAAC,OAAIkH,EAAalH,EAAEtG,OAAOoG,aAE9E,mDAEI,uBAAOlD,KAAK,OAAOkD,MAAOgC,EAAO/B,SAAU,SAAAC,GAAC,OAAImH,EAASnH,EAAEtG,OAAOoG,aAEtE,+CAEI,uBAAOlD,KAAK,OAAOkD,MAAOsH,EAAUrH,SAAU,SAAAC,GAAC,OAAIqH,EAAYrH,EAAEtG,OAAOoG,aAE5E,gDAEI,uBAAOlD,KAAK,OAAOkD,MAAOwH,EAAWvH,SAAU,SAAAC,GAAC,OAAIuH,EAAavH,EAAEtG,OAAOoG,aAE9E,uBAAOlD,KAAK,SAASkD,MAAM,oBCN5B+H,EA5EU,WAAO,IAAD,EACGvM,mBAAS,IADZ,mBACXG,GADW,aAGWH,mBAAS,GAHpB,mBAGpBmD,EAHoB,KAGPC,EAHO,OAIKpD,mBAAS,GAJd,mBAIpBI,EAJoB,KAIVoM,EAJU,OAMiCxM,oBAAS,GAN1C,mBAMpByM,EANoB,KAMIC,EANJ,KAOnBpM,EAA2BnB,cAA3BmB,uBACFmD,EAAUC,cAQVC,EAAY,uCAAG,WAAOC,GAAP,qBAAAlD,EAAA,6DACjBkD,EAAIC,iBADa,SAITC,EAAuB,CACvBX,YAAaA,EACb/C,SAAUA,GAND,SAQOE,IARP,cAQPK,EARO,gBASkCC,MAAM,GAAD,OAf1CC,wBAe0C,qBAAkC,CAClFkD,OAAQ,OACRC,KAAM,OACNlD,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BH,IAE/BsD,KAAMC,KAAKC,UAAUL,KAhBZ,cASP6I,EATO,OAkBbpM,QAAQC,IAAI,uCAAyCmM,GAlBxC,UAmBsCA,EAAiC1L,OAnBvE,QAmBP2L,EAnBO,OAoBbrM,QAAQC,IAAI,yCAA2CoM,GAEvDnJ,EAAQa,KAAK,WAtBA,kDAwBbnE,EAAW,KAAMgB,SAxBJ,0DAAH,sDA2BlB,OACI,gCACI,qBAAKhD,UAAU,YAAf,SACI,mDAEJ,8BACA,wBACImD,KAAK,SACLnD,UAAU,kBACViB,QAxCuB,WAC/BsN,GAA0B,IAoCtB,kCAQCD,GACD,8BACI,uBAAMlI,SAAUZ,EAAhB,UACA,kDAEI,uBAAOrC,KAAK,OAAOkD,MAAOrB,EAAasB,SAAU,SAAAC,GAAC,OAAItB,EAAesB,EAAEtG,OAAOoG,aAElF,+CAEI,uBAAOlD,KAAK,OAAOkD,MAAOpE,EAAUqE,SAAU,SAAAC,GAAC,OAAI8H,EAAY9H,EAAEtG,OAAOoG,aAExE,uBAAOlD,KAAK,SAASkD,MAAM,oBC8BhCqI,EAlGE,WAAO,IAAD,EACW7M,mBAAS,IADpB,mBACHG,GADG,aAEWH,oBAAS,GAFpB,mBAEZyH,EAFY,KAEHC,EAFG,KAIbjE,EAAUC,cAJG,EAOa1D,mBAAS,GAPtB,mBAOZ8M,EAPY,KAOFtB,EAPE,OAQmBxL,mBAAS,GAR5B,mBAQZmD,EARY,KAQCC,EARD,OASqBpD,mBAAS,IAT9B,mBASZ+M,EATY,KASEC,EATF,OAUOhN,mBAAS,IAVhB,mBAUZqH,EAVY,KAUL4F,EAVK,OAWmBjN,mBAAS,IAX5B,mBAWZuH,EAXY,KAWC2F,EAXD,OAYelN,mBAAS,IAZxB,mBAYZmN,EAZY,KAYDC,EAZC,KAaX9M,EAA2BnB,cAA3BmB,uBAEFuH,EAAW,uCAAG,sBAAAnH,EAAA,sDAChBgH,GAAYD,GADI,2CAAH,qDAIX9D,EAAY,uCAAG,WAAOC,GAAP,qBAAAlD,EAAA,6DACjBkD,EAAIC,iBADa,SAITwG,EAAO,CACPyC,SAAUA,EACV3J,YAAaA,EACb4J,aAAcA,EAEdxF,YAAaA,EACb4F,UAAWA,GAVF,SAYO7M,IAZP,cAYPK,EAZO,gBAauBC,MAAM,GAAD,OA3B/BC,wBA2B+B,aAA0B,CAC/DkD,OAAQ,OACRC,KAAM,OACNlD,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BH,IAE/BsD,KAAMC,KAAKC,UAAUkG,KApBZ,cAaPgD,EAbO,OAsBb9M,QAAQC,IAAI,4BAA8B6M,GAtB7B,UAuB2BA,EAAsBpM,OAvBjD,QAuBPqM,EAvBO,OAwBb/M,QAAQC,IAAI,gCAAkC8M,EAA0B/L,IAExEkC,EAAQa,KAAK,WA1BA,kDA4BbnE,EAAW,KAAMgB,SA5BJ,0DAAH,sDA+BlB,OACI,gCACI,qBAAKhD,UAAU,YAAf,SACI,yCAEJ,8BACA,wBACImD,KAAK,SACLnD,UAAU,kBACViB,QAASyI,EAHb,2BAQCJ,GACD,8BACI,uBAAMlD,SAAUZ,EAAhB,UACA,+CAEI,uBAAOrC,KAAK,OAAOkD,MAAOsI,EAAUrI,SAAU,SAAAC,GAAC,OAAI8G,EAAY9G,EAAEtG,OAAOoG,aAE5E,kDAEI,uBAAOlD,KAAK,OAAOkD,MAAOrB,EAAasB,SAAU,SAAAC,GAAC,OAAItB,EAAesB,EAAEtG,OAAOoG,aAElF,wDAEI,uBAAOlD,KAAK,OAAOkD,MAAOuI,EAActI,SAAU,SAAAC,GAAC,OAAIsI,EAAgBtI,EAAEtG,OAAOoG,aAEpF,iDAEI,uBAAOlD,KAAK,OAAOkD,MAAO6C,EAAO5C,SAAU,SAAAC,GAAC,OAAIuI,EAASvI,EAAEtG,OAAOoG,aAEtE,kDAEI,uBAAOlD,KAAK,OAAOkD,MAAO+C,EAAa9C,SAAU,SAAAC,GAAC,OAAIwI,EAAexI,EAAEtG,OAAOoG,aAElF,gDAEI,uBAAOlD,KAAK,OAAOkD,MAAO2I,EAAW1I,SAAU,SAAAC,GAAC,OAAI0I,EAAa1I,EAAEtG,OAAOoG,aAE9E,uBAAOlD,KAAK,SAASkD,MAAM,oBC9C5B+I,EA/BH,WAGV,OAFsBpO,cAAdqO,UAGC,cAAC,EAAD,IAIP,sBAAKjM,GAAG,MAAMpD,UAAU,2BAAxB,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,wBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsP,KAAK,IAAI1O,OAAK,EAACqK,UAAWL,IACjC,cAAC,EAAD,CAAgB0E,KAAK,SAASrE,UAAWzE,IACzC,cAAC,EAAD,CAAgB8I,KAAK,WAAWrE,UAAW5B,IAC3C,cAAC,EAAD,CAAgBiG,KAAK,WAAWrE,UAAWJ,IAC3C,cAAC,EAAD,CAAgByE,KAAK,gBAAgBrE,UAAWd,IAChD,cAAC,EAAD,CAAgBmF,KAAK,cAAcrE,UAAWkC,IAC9C,cAAC,EAAD,CAAgBmC,KAAK,kBAAkBrE,UAAWlG,IAClD,cAAC,EAAD,CAAgBuK,KAAK,SAASrE,UAAWsC,IACzC,cAAC,EAAD,CAAgB+B,KAAK,qBAAqBrE,UAAWmD,IACrD,cAAC,EAAD,CAAgBkB,KAAK,qBAAqBrE,UAAWrJ,IACrD,cAAC,EAAD,CAAgB0N,KAAK,oCAAoCrE,UAAWI,IACpE,cAAC,EAAD,CAAgBiE,KAAK,YAAYrE,UAAWyD,SAGhD,cAAC,EAAD,QCnBSa,EAvBkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5BlK,EAAUC,cAShB,OACE,cAAC,IAAD,CACEkK,OAVW/M,mBAWXgN,SAVahN,mCAWbiN,YAAatO,OAAOC,SAASC,OAC7BqO,mBATuB,SAACC,GAC1BvK,EAAQa,MAAa,OAAR0J,QAAQ,IAARA,OAAA,EAAAA,EAAUzO,WAAYC,OAAOC,SAASwO,WASjDC,SAZarN,0BAOf,SAOG8M,K,MCdPQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJzD,SAASC,eAAe,W","file":"static/js/main.56409694.chunk.js","sourcesContent":["import React from \"react\";\n\nconst HomeContent = () => (\n  <div className=\"next-steps\">\n    <h2 className=\"my-5 text-center\">What can I do next?</h2>\n\n    <div className=\"row\">\n      <div className=\"col-md-5 mb-4\">\n        <h6 className=\"mb-3\">\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://auth0.com/docs/connections\"\n          >\n            <i className=\"fas fa-link mr-2\" />\n            Configure other identity providers\n          </a>\n        </h6>\n        <p>\n          Auth0 supports social providers as Facebook, Twitter, Instagram and\n          100+, Enterprise providers as Microsoft Office 365, Google Apps,\n          Azure, and more. You can also use any OAuth2 Authorization Server.\n        </p>\n      </div>\n\n      <div className=\"col-md\" />\n\n      <div className=\"col-md-5 mb-4\">\n        <h6 className=\"mb-3\">\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://auth0.com/docs/multifactor-authentication\"\n          >\n            <i className=\"fas fa-link mr-2\" />\n            Enable Multi-Factor Authentication\n          </a>\n        </h6>\n        <p>\n          Add an extra layer of security by enabling Multi-factor\n          Authentication, requiring your users to provide more than one piece of\n          identifying information. Push notifications, authenticator apps, SMS,\n          and DUO Security are supported.\n        </p>\n      </div>\n    </div>\n\n    <div className=\"row\">\n      <div className=\"col-md-5 mb-4\">\n        <h6 className=\"mb-3\">\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://auth0.com/docs/anomaly-detection\"\n          >\n            <i className=\"fas fa-link mr-2\" />\n            Anomaly Detection\n          </a>\n        </h6>\n        <p>\n          Auth0 can detect anomalies and stop malicious attempts to access your\n          application. Anomaly detection can alert you and your users of\n          suspicious activity, as well as block further login attempts.\n        </p>\n      </div>\n\n      <div className=\"col-md\" />\n\n      <div className=\"col-md-5 mb-4\">\n        <h6 className=\"mb-3\">\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://auth0.com/docs/rules\"\n          >\n            <i className=\"fas fa-link mr-2\" />\n            Learn About Rules\n          </a>\n        </h6>\n        <p>\n          Rules are JavaScript functions that execute when a user authenticates\n          to your application. They run once the authentication process is\n          complete, and you can use them to customize and extend Auth0's\n          capabilities.\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default HomeContent;\n","import React from \"react\";\n\nconst Footer = () => (\n  <footer className=\"bg-light p-3 text-center\">\n    <div className=\"logo\" />\n    <p>\n      Sample project provided by{\" \"}\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://auth0.com\">\n        Auth0\n      </a>\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\n\nconst logo = \"https://cdn.auth0.com/blog/auth0-react-sample/assets/logo.png\";\n\nconst Hero = () => (\n  <div className=\"text-center hero\">\n    <img className=\"mb-3 app-logo\" src={logo} alt=\"React logo\" width=\"120\" />\n    <h1 className=\"mb-4\">React Sample Project</h1>\n    <p className=\"lead\">\n      This is a sample application that demonstrates an authentication flow for\n      an SPA, using{\" \"}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://auth0.com/docs/quickstart/spa/react\"\n      >\n        React\n      </a>\n    </p>\n  </div>\n);\n\nexport default Hero;\n","import React from \"react\";\nconst loadingImg =\n  \"https://cdn.auth0.com/blog/auth0-react-sample/assets/loading.svg\";\n\nconst Loading = () => (\n  <div className=\"spinner\">\n    <img src={loadingImg} alt=\"Loading...\" />\n  </div>\n);\n\nexport default Loading;\n","import {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\nconst MainNav = () => (\n  <div className=\"navbar-nav mr-auto\">\n    <NavLink\n      to=\"/\"\n      exact\n      className=\"nav-link\"\n      activeClassName=\"router-link-exact-active\"\n    >\n      Home\n    </NavLink>\n    <NavLink\n      to=\"/profile\"\n      exact\n      className=\"nav-link\"\n      activeClassName=\"router-link-exact-active\"\n    >\n      Profile\n    </NavLink>\n    <NavLink\n      to=\"/external-api\"\n      exact\n      className=\"nav-link\"\n      activeClassName=\"router-link-exact-active\"\n    >\n      External API\n    </NavLink>\n  </div>\n);\n\nexport default MainNav;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <button\n      className=\"btn btn-primary btn-block\"\n      onClick={() => loginWithRedirect()}\n    >\n      Log In\n    </button>\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n  return (\n    <button\n      className=\"btn btn-danger btn-block\"\n      onClick={() =>\n        logout({\n          returnTo: window.location.origin,\n        })\n      }\n    >\n      Log Out\n    </button>\n  );\n};\n\nexport default LogoutButton;\n","import React from \"react\";\n\nimport LoginButton from \"./login-button\";\nimport LogoutButton from \"./logout-button\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst AuthenticationButton = () => {\n  const { isAuthenticated } = useAuth0();\n\n  return isAuthenticated ? <LogoutButton /> : <LoginButton />;\n};\n\nexport default AuthenticationButton;\n","import React from \"react\";\nimport AuthenticationButton from \"./authentication-button\";\n\nconst AuthNav = () => (\n  <div className=\"navbar-nav ml-auto\">\n    <AuthenticationButton />\n  </div>\n);\n\nexport default AuthNav;\n","import React from \"react\";\n\nimport MainNav from \"./main-nav\";\nimport AuthNav from \"./auth-nav\";\n\nconst NavBar = () => {\n  return (\n    <div className=\"nav-container mb-3\">\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        <div className=\"container\">\n          <div className=\"navbar-brand logo\" />\n          <MainNav />\n          <AuthNav />\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { PowerBIEmbed } from 'powerbi-client-react';\nimport { models } from 'powerbi-client';\n\nconst Report = () => {\n    const [reportConfig, setReportConfig] = useState({});\n    const [message, setMessage] = useState(\"\");\n\n    const { reportId } = useParams();\n    const { getAccessTokenSilently } = useAuth0();\n    const serverUrl = process.env.REACT_APP_SERVER_URL;\n\n    console.log('Got the reportId from the params ' + reportId);\n    \n      useEffect(() => {\n        const callGetReportConfig = async () => {\n          try {\n            const token = await getAccessTokenSilently();\n            const response = await fetch(\n              `${serverUrl}/reports/${reportId}/pbiconfig`,\n              {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              }\n            );\n            console.log('Inside callGetReportConfig.  Got a response back of ' + response);\n            const responseData = await response.json();\n      \n            setReportConfig(responseData);\n            console.log('After settings report config to state');\n          } catch (error) {\n            setMessage(error.message);\n          }\n        };\n  \n        callGetReportConfig();\n      }, []);\n\n    return (\n\n        <PowerBIEmbed\n          embedConfig = {{\n            type: 'report',   // Supported types: report, dashboard, tile, visual and qna\n            id: reportConfig.pbiIdentifier,\n            //embedUrl: reportConfig.embedUrl,\n            embedUrl: reportConfig.embedUrl,\n            accessToken: reportConfig.accessToken,\n            tokenType: models.TokenType.Embed,\n            permissions: models.Permissions.All,\n            viewMode: models.ViewMode.View,\n            settings: {\n              panes: {\n                filters: {\n                  expanded: true,\n                  visible: true\n                }\n              },\n       //       background: models.BackgroundType.Transparent,\n            }\n          }}\n\n          eventHandlers = { \n            new Map([\n              ['loaded', function () {console.log('Report loaded');}],\n              ['rendered', function () {console.log('Report rendered');}],\n              ['error', function (event) {console.log(event.detail);}]\n            ])\n          }\n            \n          cssClassName = { \"Embed-container\" }\n\n          getEmbeddedComponent = { (embeddedReport) => {\n            window.report = embeddedReport;\n          }}\n        />\n      );\n};\n\nexport default Report;","import { useEffect, useState } from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport '../app.css';\n\nconst WorkspaceUsers = () => {\n    const [message, setMessage] = useState(\"\");\n\n    const [workspaceId, setWorkspaceId] = useState(0);\n    const [userId, setUserId] = useState(0);\n\n    const [showNewWorkspaceUser, setShowNewWorkspaceUser] = useState(false);\n    const history = useHistory();\n\n    const { getAccessTokenSilently } = useAuth0();\n\n    const serverUrl = process.env.REACT_APP_SERVER_URL;\n\n    const callShowNewUser = () => {\n        setShowNewWorkspaceUser(true);    \n    };\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n\n        try {\n            let pbiWorkspaceUserData = {\n                userId: userId,\n                workspaceId: workspaceId \n            };\n            const token = await getAccessTokenSilently();\n            const createPbiWorkspaceUserResponse = await fetch(`${serverUrl}/workspaceusers`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify(pbiWorkspaceUserData)\n            });\n            console.log('createPbiWorkspaceUserResponse is ' + createPbiWorkspaceUserResponse);\n            const createPbiWorkspaceUserResponseData = await createPbiWorkspaceUserResponse.json();\n            console.log('createPbiWorkspaceUserResponseData is ' + createPbiWorkspaceUserResponseData);\n\n            history.push(\"./admin\");\n        } catch (error) {\n            setMessage(error.message);\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Workspace Users</h1>\n            </div>\n            <div>\n            <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={callShowNewUser}\n                >\n                New Workdpace User\n            </button>\n            </div>\n            {showNewWorkspaceUser &&\n            <div>\n                <form onSubmit={handleSubmit}>\n                <label>\n                    User Id:\n                    <input type=\"text\" value={userId} onChange={e => setUserId(e.target.value)} />\n                </label>\n                <label>\n                    Workspace Id:\n                    <input type=\"text\" value={workspaceId} onChange={e => setWorkspaceId(e.target.value)} />\n                </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>}\n\n        </div>\n    );\n}\n\nexport default WorkspaceUsers;","import '../app.css';\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport WorkspaceUsers from './workspace-users';\n\nconst Admin = () => {\n    const [message, setMessage] = useState(\"\");\n    const [tenants, setTenants] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [workspaceUsers, setWorkspaceUsers] = useState({});\n    const [dataSets, setDatasets] = useState({});\n\n    const [showTenants, setShowTenants] = useState(false);\n    const [showUsers, setShowUsers] = useState(false);\n    const [showWorkspaces, setShowWorkspaces] = useState(false);\n    const [showWorkspaceUsers, setShowWorkspaceUsers] = useState(false);\n    const [showWorkspaceReports, setShowWorkspaceReports] = useState(false);\n    const [showDatasets, setShowDatasets] = useState(false);\n    const [workspaces, setWorkspaces] = useState([]);\n    const history = useHistory();\n    const { getAccessTokenSilently } = useAuth0();\n    const serverUrl = process.env.REACT_APP_SERVER_URL;\n\n      const callTenants = async () => {\n        console.log('Inside callTenants');\n        try {\n            const token = await getAccessTokenSilently();\n            const response = await fetch(\n                `${serverUrl}/tenants`,\n                {\n                  headers: {\n                    Authorization: `Bearer ${token}`,\n                  },\n                }\n                );\n          console.log('Got the response inside callTenants');\n          const responseData = await response.json();\n          console.log('Got the responseData inside callTenants');\n    \n          setTenants(responseData);\n          showNone();\n          setShowTenants(true);\n        } catch (error) {\n          setMessage(error.message);\n        }\n      };\n\n      const callNavigateTenants = () => {\n        history.push('./tenants');\n      };\n\n      const callNavigateWorkspaces = () => {\n        history.push('./workspaces');\n      }\n\n      const callNavigateUsers = () => {\n          history.push('./users');\n      }\n\n      const callNavigateWorkspaceUsers = () => {\n          history.push('./workspaceusers');\n      }\n\n      const callNavigateWorkspaceReports = () => {\n        history.push('./workspace-reports');\n      }\n\n      const callNavigateDatasets = () => {\n        history.push('./datasets');\n      }\n\n      const showNone = () => {\n        setShowTenants(false);\n        setShowUsers(false); \n        setShowWorkspaces(false);\n        setShowWorkspaceUsers(false);\n        setShowWorkspaceReports(false);\n        setShowDatasets(false);\n      }\n\n      const callWorkspaces = async () => {\n        try {\n            const token = await getAccessTokenSilently();\n            const response = await fetch(\n                `${serverUrl}/workspaces`,\n                {\n                  headers: {\n                    Authorization: `Bearer ${token}`,\n                  },\n                }\n                );\n          console.log('Got respons back from workspaces');\n          const responseData = await response.json();\n          console.log('Thre responseData from callWorkspaces is ' + responseData);\n          setWorkspaces(responseData);\n          showNone();\n          setShowWorkspaces(true);\n        } catch (error) {\n          setMessage(error.message);\n        }\n      };\n\n      const callWorkspaceUsers = async () => {\n        try {\n          const token = await getAccessTokenSilently();\n          const response = await fetch(\n              `${serverUrl}/workspaceusers`,\n              {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              }\n              );\n          console.log('Got respons back from workspaceusers');\n          const responseData = await response.json();\n          console.log('Thre responseData from callWorkspaceUsers is ' + responseData);\n          setWorkspaceUsers(responseData);\n          showNone();\n          setShowWorkspaceUsers(true);\n        } catch (error) {\n          setMessage(error.message);\n        }\n      };\n\n      const callUsers = async () => {\n        try {\n            const token = await getAccessTokenSilently();\n\n            const response = await fetch(\n                `${serverUrl}/users`,\n                {\n                  headers: {\n                    Authorization: `Bearer ${token}`,\n                  },\n                });\n            console.log('Got respons back from users');\n            const responseData = await response.json();\n            console.log('Thre responseData from callUsers is ' + responseData);\n            console.log('The email address is ' + responseData.email);\n            setUsers(responseData);\n            showNone();\n            setShowUsers(true);\n          } catch (error) {\n            setMessage(error.message);\n          }\n      }\n\n      const callDatasets = async () => {\n        try {\n            const token = await getAccessTokenSilently();\n\n            const response = await fetch(\n                `${serverUrl}/datasets`,\n                {\n                    headers: {\n                      Authorization: `Bearer ${token}`,\n                    },\n                  }\n                );\n            console.log('Got respons back from datasets');\n            const responseData = await response.json();\n            console.log('Thre responseData from callDatasets is ' + responseData);\n            setDatasets(responseData);\n            showNone();\n            setShowDatasets(true);\n        } catch (error) {\n            setMessage(error.message);\n        }\n      };\n\n    return (\n        <div className=\"container\">\n          <h1>External API</h1>\n          <p>\n            Use these buttons to call an external API. The protected API call has an\n            access token in its authorization header. The API server will validate\n            the access token using the Auth0 Audience value.\n          </p>\n          <div\n            className=\"btn-group mt-5\"\n            role=\"group\"\n            aria-label=\"External API Requests Examples\"\n          >\n            <button type=\"button\" className=\"btn btn-primary\" onClick={callTenants}>\n              Tenants\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={callWorkspaces}\n            >\n              Workspaces\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={callUsers}\n            >\n              Users\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={callWorkspaceUsers}\n            >\n              Workspace Users\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={callDatasets}\n            >\n              Datasets\n            </button>\n          </div>\n          {message && (\n            <div className=\"mt-5\">\n              <h6 className=\"muted\">Result</h6>\n              <div className=\"container-fluid\">\n                <div className=\"row\">\n                  <code className=\"col-12 text-light bg-dark p-4\">{message}</code>\n                </div>\n              </div>\n            </div>\n          )}\n          {showTenants &&(\n              <div>\n                <div>Tenants</div>\n                <div>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={callNavigateTenants}>Add Tenant</button>\n                </div>\n                <div>\n                <ul>\n                    {tenants.map(tenant => (\n                        <li key={tenant.id}><Link to={`/tenants/${tenant.id}`}>{tenant.id} - {tenant.tenantName}</Link></li>\n                    ))}\n                </ul>\n                </div>\n              </div>\n          )}\n          {showWorkspaces && (\n            <div>\n                <div>Workspaces</div>\n                <div>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={callNavigateWorkspaces}>Add Workspace</button>\n                </div>\n                <div>\n                <ul>\n                    {workspaces.map(workspsace => (\n                        <li key={workspsace.id}><Link to={`/workspaces/${workspsace.id}`}>{workspsace.id} - {workspsace.workspaceName}</Link></li>\n                    ))}\n                </ul>\n                </div>\n              </div>\n          )}\n          {showUsers && (\n            <div>\n                <div>Users</div>\n                <div>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={callNavigateUsers}>Add User</button>\n                </div>\n                <div>\n                <ul>\n                    {users.map(user => (\n                        <li key={user.id}><Link to={`/users/${user.id}`}>{user.id} / {user.email}</Link></li>\n                    ))}\n                </ul>\n                </div>\n              </div>\n          )}\n          {showWorkspaceUsers && (\n            <div>\n                <div>Users</div>\n                <div>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={callNavigateWorkspaceUsers}>Add Workspace User</button>\n                </div>\n                <div>\n                <ul>\n                    {workspaceUsers.map(workspaceUser => (\n                        <li key={workspaceUser.id}><Link to={`/users/${workspaceUser.id}`}>{workspaceUser.id} - {workspaceUser.userId}/{workspaceUser.workspaceId}</Link></li>\n                    ))}\n                </ul>\n                </div>\n              </div>\n          )}\n          {showWorkspaceReports && (\n            <div>\n                <div>Users</div>\n                <div>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={callNavigateWorkspaceReports}>Add Workspace Reports</button>\n                </div>\n                <div>\n                <ul>\n                    {users.map(workspaceReport => (\n                        <li key={workspaceReport.id}><Link to={`/workspace-reports/${workspaceReport.id}`}>{workspaceReport.workspaceId}/{workspaceReport.reportId}</Link></li>\n                    ))}\n                </ul>\n                </div>\n              </div>\n          )}\n          {showDatasets && (\n            <div>\n                <div>Datasets</div>\n                <div>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={callNavigateDatasets}>Add Datasets</button>\n                </div>\n                <div>\n                <ul>\n                    {dataSets.map(dataSet => (\n                        <li key={dataSet.id}><Link to={`/datasets/${dataSet.pbiId}/${dataSet.pbiWorkspaceId}`}>{dataSet.workspaceId} - {dataSet.dataSetName}</Link></li>\n                    ))}\n                </ul>\n                </div>\n              </div>\n          )}\n        </div>\n      );\n}\n\nexport default Admin;","import { useEffect, useState } from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport '../app.css';\n\nconst Tenants = () => {\n    const [message, setMessage] = useState(\"\");\n    const [showDiv, setShowDiv] = useState(false);\n    const [tenantName, setTenantName] = useState(\"\");\n    const [tenant, setTenant] = useState({});\n    const history = useHistory();\n    const { getAccessTokenSilently } = useAuth0();\n    const serverUrl = process.env.REACT_APP_SERVER_URL;\n\n    const callShowDiv = async () => {\n        setShowDiv(!showDiv);    \n    };\n    \n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n        try {\n            let tenantData = {\n                tenantName: tenantName\n            };\n            const token = await getAccessTokenSilently();\n            const createTenantResponse = await fetch(`${serverUrl}/tenants`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify(tenantData)\n            });\n            const createTenantResponseData = await createTenantResponse.json();\n            console.log('createTenantResponseData is ' + createTenantResponseData);\n            setTenant(createTenantResponseData);\n\n\n            let pbiWorkspaceData = {\n                workspaceLocation: \"eastus\",\n                workspaceName: tenantName,\n                tenantId: createTenantResponseData.id\n            };\n            const createPbiWorkspaceResponse = await fetch(`${serverUrl}/workspaces`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify(pbiWorkspaceData)\n            });\n            console.log('createPbiWorkspaceResponse is ' + createPbiWorkspaceResponse);\n            const createPbiWorkspaceResponseData = await createPbiWorkspaceResponse.json();\n            console.log('createPbiWorkspaceResponseData is ' + createPbiWorkspaceResponseData);\n\n            history.push(\"./admin\");\n        } catch (error) {\n            setMessage(error.message);\n        }\n    };\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Tenants</h1>\n            </div>\n            <div>\n            <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={callShowDiv}\n                >\n                Show\n            </button>\n            </div>\n            {showDiv &&\n            <div>\n                <form onSubmit={handleSubmit}>\n                <label>\n                    Tenant Name:\n                    <input type=\"text\" value={tenantName} onChange={e => setTenantName(e.target.value)} />\n                </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>}\n        </div>\n    );\n};\n\nexport default Tenants;","import React, { useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst ExternalApi = () => {\n  const [message, setMessage] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [dataSets, setDatasets] = useState([]);\n  const [userDataSets, setUserDataSets] = useState([]);\n  const history = useHistory();\n  const serverUrl = process.env.REACT_APP_SERVER_URL;\n\n  const { getAccessTokenSilently } = useAuth0();\n\n  const callAdmin = () => {\n    history.push(\"/admin\");\n  };\n\n  const callApi = async () => {\n    try {\n      const response = await fetch(`${serverUrl}/api/public`);\n\n      const responseData = await response.json();\n\n      setMessage(responseData.message);\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n\n  const callSecureApi = async () => {\n    try {\n      const token = await getAccessTokenSilently();\n\n      const response = await fetch(\n        `${serverUrl}/api/private`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      const responseData = await response.json();\n      setMessage(responseData.message);\n\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n\n  const callGetUsers = async () => {\n    try {\n      const token = await getAccessTokenSilently();\n\n      const response = await fetch(\n        `${serverUrl}/users`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n      const responseData = await response.json();\n\n      setUsers(responseData);\n\n      let message = \"\";\n      responseData.forEach(element => {\n        message += element.email + \" \";\n      });\n\n      setMessage(message);\n    } catch (error) {\n      setMessage(error.message);\n    }\n  }\n\n  const callGetUserReports = async () => {\n    try {\n      const token = await getAccessTokenSilently();\n      const response = await fetch(\n        `${serverUrl}/users/1/reports`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n      const responseData = await response.json();\n      setReports(responseData);\n    } catch (error) {\n      setMessage(error.message);\n    }\n  }\n\n  const callGetUserDatasetsFromApi = async() => {\n    try {\n    const token = await getAccessTokenSilently();\n    const response = await fetch(\n      `${serverUrl}/users/1/datasets`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      const responseData = await response.json();\n      console.log('Got the response back from callGetUserDatasetsFromApi.  The value is ' + responseData);\n     // setUserDataSets(responseData);\n     setDatasets(responseData);\n    } catch (error) {\n      setMessage(error.message);\n    }\n  }\n\n  const callGetUserDataSets = async() => {\n    try {\n      //const response = await fetch(`${serverUrl}/users/1/reports`);\n      //const responseData = await response.json();\n      const responseData = [\n        {\n          id: \"714dbd7d-cde7-43bd-8b28-0b06f3f8285f\",\n          dataSetName: \"Weather\"\n        }\n      ]\n      setDatasets(responseData);\n    } catch (error) {\n      setMessage(error.message);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>External API</h1>\n      <p>\n        Use these buttons to call an external API. The protected API call has an\n        access token in its authorization header. The API server will validate\n        the access token using the Auth0 Audience value.\n      </p>\n      <div\n        className=\"btn-group mt-5\"\n        role=\"group\"\n        aria-label=\"External API Requests Examples\"\n      >\n        <button type=\"button\" className=\"btn btn-primary\" onClick={callApi}>\n          Get Public Message\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={callSecureApi}\n        >\n          Get Protected Message\n        </button>\n        <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={callGetUserDataSets}\n        >\n          Get Datasets\n        </button>\n        <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={callGetUserDatasetsFromApi}\n        >\n          Get User Datasets\n        </button>\n        <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={callAdmin}\n        >\n          Admin\n        </button>\n      </div>\n      {message && (\n        <div className=\"mt-5\">\n          <h6 className=\"muted\">Result</h6>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <code className=\"col-12 text-light bg-dark p-4\">{message}</code>\n            </div>\n          </div>\n        </div>\n      )}\n      <ul>\n      {reports.map(report => (\n        <li key={report.id}><Link to={`/reports/${report.id}`}>{report.reportName}</Link></li>\n      ))}\n      {dataSets.map(dataset => (\n        <li key={dataset.id}><Link to={`/datasets/${dataset.id}/f9ee0ebe-14f2-45ec-af3a-34e4c4a399e3`}>{dataset.dataSetName}</Link></li>\n      //<li key={dataset.id}><Link to={`/datasets/${dataset.pbiId}/${dataset.pbiWorkspaceId}`}>{dataset.dataSetName}</Link></li>\n      ))}\n    </ul>\n    </div>\n  );\n};\n\nexport default ExternalApi;\n","import React, { Fragment } from \"react\";\n\nimport { Hero, HomeContent } from \"../components\";\n\nconst Home = () => (\n  <Fragment>\n    <Hero />\n    <hr />\n    <HomeContent />\n  </Fragment>\n);\n\nexport default Home;\n","import React from \"react\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Profile = () => {\n  const { user } = useAuth0();\n  const { name, picture, email } = user;\n\n  return (\n    <div>\n      <div className=\"row align-items-center profile-header\">\n        <div className=\"col-md-2 mb-3\">\n          <img\n            src={picture}\n            alt=\"Profile\"\n            className=\"rounded-circle img-fluid profile-picture mb-3 mb-md-0\"\n          />\n        </div>\n        <div className=\"col-md text-center text-md-left\">\n          <h2>{name}</h2>\n          <p className=\"lead text-muted\">{email}</p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <pre className=\"col-12 text-light bg-dark p-4\">\n          {JSON.stringify(user, null, 2)}\n        </pre>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","// src/auth/protected-route.js\n\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport { Loading } from \"../components/index\";\n\nconst ProtectedRoute = ({ component, ...args }) => (\n  <Route\n    component={withAuthenticationRequired(component, {\n      onRedirecting: () => <Loading />,\n    })}\n    {...args}\n  />\n);\n\nexport default ProtectedRoute;\n","import logo from './logo.svg';\nimport '../app.css';\nimport { useEffect, useState } from 'react';\nimport { service, factories, models, IEmbedConfiguration } from \"powerbi-client\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst CreateReport = () => {\n    const powerbi = new service.Service(factories.hpmFactory, factories.wpmpFactory, factories.routerFactory);\n    const { getAccessTokenSilently } = useAuth0();\n    const [embedConfig, setEmbedConfig] = useState({});\n    const [clonedReport, setClonedReport] = useState({});\n    const [message, setMessage] = useState(\"\");\n    const history = useHistory();\n    \n    const { datasetId, workspaceId } = useParams();\n    const serverUrl = process.env.REACT_APP_SERVER_URL;\n\n    const callCloneReport = async(reportId, reportName, sourceWorkspaceId, destinationWorkspaceId) => {\n        let data = {\n            sourceWorkspaceId: sourceWorkspaceId,\n            destinationWorkspaceId: destinationWorkspaceId,\n            reportId: reportId,\n            reportName: reportName\n        };\n        try {\n          const token = await getAccessTokenSilently();\n          const clonedReportResponse = await fetch(`${serverUrl}/reports/${reportId}/clone`, {\n              method: 'POST',\n              mode: 'cors',\n              headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${token}`,\n              },\n              body: JSON.stringify(data)\n          });\n          const clonedReportResponseData = await clonedReportResponse.json();\n          // delete the origional report with the passed in reportId\n          history.push(`/reports/${clonedReportResponseData.pbiIdentifier}`);\n        } catch (error) {\n          setMessage(error.message);\n        }\n    };\n\n    useEffect(() => {\n        console.log('entered useEffect()');\n\n        const callGetEmbedConfig = async () => {\n              const pbiConfigResponse = await fetch(`${serverUrl}/datasets/${datasetId}/config`);\n              const pbiConfigResponseData = await pbiConfigResponse.json();\n              setEmbedConfig(pbiConfigResponseData);\n\n            let reportContainer = document.getElementById(\"reportContainer\");\n            \n            let embedCreateConfiguration = {\n                type: \"report\",\n                tokenType: 1,\n                accessToken: pbiConfigResponseData.embedToken.token,\n                embedUrl: pbiConfigResponseData.embedDatasets[0].createReportEmbedURL,\n                datasetId: pbiConfigResponseData.embedDatasets[0].id,\n                permissions: models.Permissions.All,\n                settings: {\n                panes: {\n                    filters: {\n                    expanded: true,\n                    visible: true\n                    }\n                },\n                }\n            };\n\n            if (reportContainer != null) {\n                let report = powerbi.createReport(reportContainer, embedCreateConfiguration);\n                // Clear any other loaded handler events\n                report.off(\"loaded\");\n\n                // Triggers when a content schema is successfully loaded\n                report.on(\"loaded\", function () {\n                console.log(\"Report load successful\");\n                });\n\n                // Clear any other rendered handler events\n                report.off(\"rendered\");\n\n                // Triggers when a content is successfully embedded in UI\n                report.on(\"rendered\", function () {\n                    console.log(\"Report render successful\");\n                });\n\n                report.off(\"saved\");\n                report.on(\"saved\", function (event) {\n                    let reportId = event.detail.reportObjectId;\n                    let reportName = event.detail.reportName;\n                    let sourceWorkspaceId = \"f9ee0ebe-14f2-45ec-af3a-34e4c4a399e3\";\n                    let destinationWorkspaceId = \"6e5482de-8849-4ec2-b432-0939f3a15f31\";\n                    callCloneReport(reportId, reportName, sourceWorkspaceId, destinationWorkspaceId);\n                });\n            } else {\n                console.log('Report container was not found');\n            }\n        };\n        callGetEmbedConfig();   \n    }, []);\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div id=\"reportContainer\" className=\"Embed-container\">\n            </div>\n          </header>\n        </div>\n      );\n}\n\nexport default CreateReport;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useState } from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport '../app.css';\n\nconst Workspaces = () => {\n    const [message, setMessage] = useState(\"\");\n    const [showDiv, setShowDiv] = useState(false);\n    const [workspaceName, setWorkspaceName] = useState(\"\");\n    const [tenantId, setTenantId] = useState(0);\n    const [workspaceLocation, setWorkspaceLocation] = useState(\"\");\n    const history = useHistory();\n    const { getAccessTokenSilently } = useAuth0();\n    const serverUrl = process.env.REACT_APP_SERVER_URL;\n\n    const callShowDiv = async () => {\n        setShowDiv(!showDiv);    \n    };\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n       try {\n     /*        let data = {\n                tenantName: tenantName\n            };\n            const createTenantResponse = await fetch(`${serverUrl}/tenants`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            });\n            console.log('createTenantResponse is ' + createTenantResponse);\n            const createTenantResponseData = await createTenantResponse.json();\n            console.log('createTenantResponseData is ' + createTenantResponseData);\n*/\n            let pbiWorkspaceData = {\n                workspaceLocation: workspaceLocation,\n                workspaceName: workspaceName,\n                tenantId: tenantId\n            };\n            const token = await getAccessTokenSilently();\n            const createPbiWorkspaceResponse = await fetch(`${serverUrl}/workspaces`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify(pbiWorkspaceData)\n            });\n            console.log('createPbiWorkspaceResponse is ' + createPbiWorkspaceResponse);\n            const createPbiWorkspaceResponseData = await createPbiWorkspaceResponse.json();\n            console.log('createPbiWorkspaceResponseData is ' + createPbiWorkspaceResponseData);\n\n            history.push(\"./admin\");\n        } catch (error) {\n            setMessage(error.message);\n        }\n    };\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Tenants</h1>\n            </div>\n            <div>\n            <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={callShowDiv}\n                >\n                Add Workspace\n            </button>\n            </div>\n            {showDiv &&\n            <div>\n                <form onSubmit={handleSubmit}>\n                <label>\n                    Workspace Name:\n                    <input type=\"text\" value={workspaceName} onChange={e => setWorkspaceName(e.target.value)} />\n                </label>\n                <label>\n                   Workspace Location:\n                    <input type=\"text\" value={workspaceLocation} onChange={e => setWorkspaceLocation(e.target.value)} />\n                </label>\n                <label>\n                   Tenant Id:\n                    <input type=\"text\" value={tenantId} onChange={e => setTenantId(e.target.value)} />\n                </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>}\n        </div>\n    );\n}\n\nexport default Workspaces;","import { useEffect, useState } from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport '../app.css';\n\nconst Users = () => {\n    const [message, setMessage] = useState(\"\");\n\n    const [idpUserId, setIdpUserId] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n\n    const history = useHistory();\n    const [showNewUser, setShowNewUser] = useState(false);\n\n    const { getAccessTokenSilently } = useAuth0();\n\n    const serverUrl = process.env.REACT_APP_SERVER_URL;\n\n    const callShowNewUser = () => {\n        setShowNewUser(true);    \n    };\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n\n        try {\n            let userData = {\n                userId: idpUserId,\n                email: email,\n                lastName: lastName,\n                firstName: firstName \n            };\n            const token = await getAccessTokenSilently();\n            const createUserResponse = await fetch(`${serverUrl}/users`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify(userData)\n            });\n            console.log('createUserResponse is ' + createUserResponse);\n            const createUserResponseData = await createUserResponse.json();\n            console.log('createUserResponseData is ' + createUserResponseData);\n\n            history.push(\"./admin\");\n        } catch (error) {\n            setMessage(error.message);\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Users</h1>\n            </div>\n            <div>\n            <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={callShowNewUser}\n                >\n                New User\n            </button>\n            </div>\n            {showNewUser &&\n            <div>\n                <form onSubmit={handleSubmit}>\n                <label>\n                    IDP User Id:\n                    <input type=\"text\" value={idpUserId} onChange={e => setIdpUserId(e.target.value)} />\n                </label>\n                <label>\n                    Email Address:\n                    <input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} />\n                </label>\n                <label>\n                    Last Name:\n                    <input type=\"text\" value={lastName} onChange={e => setLastName(e.target.value)} />\n                </label>\n                <label>\n                    First Name:\n                    <input type=\"text\" value={firstName} onChange={e => setFirstName(e.target.value)} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>}\n\n        </div>\n    );\n}\n\nexport default Users;","import { useEffect, useState } from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport '../app.css';\n\nconst WorkspaceReports = () => {\n    const [message, setMessage] = useState(\"\");\n\n    const [workspaceId, setWorkspaceId] = useState(0);\n    const [reportId, setReportId] = useState(0);\n\n    const [showNewWorkspaceReport, setShowNewWorkspaceReport] = useState(false);\n    const { getAccessTokenSilently } = useAuth0();\n    const history = useHistory();\n\n    const serverUrl = process.env.REACT_APP_SERVER_URL;\n\n    const callShowNewWorkspaceReport = () => {\n        setShowNewWorkspaceReport(true);    \n    };\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n\n        try {\n            let pbiWorkspaceUserData = {\n                workspaceId: workspaceId,\n                reportId: reportId \n            };\n            const token = await getAccessTokenSilently();\n            const createPbiWorkspaceReportResponse = await fetch(`${serverUrl}/workspacereports`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify(pbiWorkspaceUserData)\n            });\n            console.log('createPbiWorkspaceReportResponse is ' + createPbiWorkspaceReportResponse);\n            const createPbiWorkspaceReportResponseData = await createPbiWorkspaceReportResponse.json();\n            console.log('createPbiWorkspaceUserResponseData is ' + createPbiWorkspaceReportResponseData);\n\n            history.push(\"./admin\");\n        } catch (error) {\n            setMessage(error.message);\n        }\n    }\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Workspace Users</h1>\n            </div>\n            <div>\n            <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={callShowNewWorkspaceReport}\n                >\n                New Workdpace User\n            </button>\n            </div>\n            {showNewWorkspaceReport &&\n            <div>\n                <form onSubmit={handleSubmit}>\n                <label>\n                    Workspace Id:\n                    <input type=\"text\" value={workspaceId} onChange={e => setWorkspaceId(e.target.value)} />\n                </label>\n                <label>\n                    Report Id:\n                    <input type=\"text\" value={reportId} onChange={e => setReportId(e.target.value)} />\n                </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>}\n\n        </div>\n    );\n}\n\nexport default WorkspaceReports;","import { useEffect, useState } from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport '../app.css';\n\nconst Datasets = () => {\n    const [message, setMessage] = useState(\"\");\n    const [showDiv, setShowDiv] = useState(false);\n\n    const history = useHistory();\n    const serverUrl = process.env.REACT_APP_SERVER_URL;\n\n    const [tenandId, setTenantId] = useState(0);\n    const [workspaceId, setWorkspaceId] = useState(0);\n    const [pbiWorkspace, setPbiWorkspace] = useState(\"\");\n    const [pbiId, setPbiId] = useState(\"\");\n    const [dataSetName, setDataSetName] = useState(\"\");\n    const [createdBy, setCreatedBy] = useState(\"\");\n    const { getAccessTokenSilently } = useAuth0();\n\n    const callShowDiv = async () => {\n        setShowDiv(!showDiv);    \n    };\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n\n        try {\n            let data = {\n                tenandId: tenandId,\n                workspaceId: workspaceId,\n                pbiWorkspace: pbiWorkspace,\n          //      pbiId: pbiId,\n                dataSetName: dataSetName,\n                createdBy: createdBy \n            };\n            const token = await getAccessTokenSilently();\n            const createDatasetResponse = await fetch(`${serverUrl}/datasets`, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify(data)\n            });\n            console.log('createDatasetResponse is ' + createDatasetResponse);\n            const createDatasetResponseData = await createDatasetResponse.json();\n            console.log('createDatasetResponseData is ' + createDatasetResponseData.id);\n\n            history.push(\"./admin\");\n        } catch (error) {\n            setMessage(error.message);\n        }\n    }\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Users</h1>\n            </div>\n            <div>\n            <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={callShowDiv}\n                >\n                New Dataset\n            </button>\n            </div>\n            {showDiv &&\n            <div>\n                <form onSubmit={handleSubmit}>\n                <label>\n                    Tenant Id:\n                    <input type=\"text\" value={tenandId} onChange={e => setTenantId(e.target.value)} />\n                </label>\n                <label>\n                    Workspace Id:\n                    <input type=\"text\" value={workspaceId} onChange={e => setWorkspaceId(e.target.value)} />\n                </label>\n                <label>\n                    Power BI Workspace:\n                    <input type=\"text\" value={pbiWorkspace} onChange={e => setPbiWorkspace(e.target.value)} />\n                </label>\n                <label>\n                    Power BI Id:\n                    <input type=\"text\" value={pbiId} onChange={e => setPbiId(e.target.value)} />\n                </label>\n                <label>\n                    Dataset Name:\n                    <input type=\"text\" value={dataSetName} onChange={e => setDataSetName(e.target.value)} />\n                </label>\n                <label>\n                    Created By:\n                    <input type=\"text\" value={createdBy} onChange={e => setCreatedBy(e.target.value)} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>}\n        </div>\n    );\n}\n\nexport default Datasets;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { NavBar, Footer, Loading } from \"./components\";\nimport Report from \"./components/report\";\nimport Admin from \"./components/admin\";\nimport Tenants from \"./components/tenants\";\nimport { Home, Profile, ExternalApi } from \"./views\";\nimport ProtectedRoute from \"./auth/protected-route\";\n\n\nimport \"./app.css\";\nimport CreateReport from \"./components/create-report\";\nimport Workspaces from \"./components/workspaces\";\nimport WorkspaceUsers from \"./components/workspace-users\";\nimport Users from \"./components/users\";\nimport WorkspaceReports from \"./components/workspace-reports\";\nimport Datasets from \"./components/datasets\";\n\nconst App = () => {\n  const { isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <div id=\"app\" className=\"d-flex flex-column h-100\">\n      <NavBar />\n      <div className=\"container flex-grow-1\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <ProtectedRoute path=\"/admin\" component={Admin} />\n          <ProtectedRoute path=\"/tenants\" component={Tenants} />\n          <ProtectedRoute path=\"/profile\" component={Profile} />\n          <ProtectedRoute path=\"/external-api\" component={ExternalApi} />\n          <ProtectedRoute path=\"/workspaces\" component={Workspaces} />\n          <ProtectedRoute path=\"/workspaceusers\" component={WorkspaceUsers} />\n          <ProtectedRoute path=\"/users\" component={Users} />\n          <ProtectedRoute path=\"/workspace-reports\" component={WorkspaceReports} />\n          <ProtectedRoute path=\"/reports/:reportId\" component={Report} />\n          <ProtectedRoute path=\"/datasets/:datasetId/:workspaceId\" component={CreateReport} />\n          <ProtectedRoute path=\"/datasets\" component={Datasets} />\n        </Switch>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const history = useHistory();\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Auth0ProviderWithHistory from \"./auth/auth0-provider-with-history\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <Router>\n    <Auth0ProviderWithHistory>\n      <App />\n    </Auth0ProviderWithHistory>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}